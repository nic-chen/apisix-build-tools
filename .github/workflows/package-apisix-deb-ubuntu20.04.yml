name: package apisix deb for ubuntu 20.04(Focal Fossa)

on:
  push:
    branches: [ "*" ]
    tags:
      - "v*"
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ "*" ]
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      PACKAGE_APISIX_VERSION: 0.0.0

    steps:
      - uses: actions/checkout@v2

      - name: install dependencies
        run: |
          sudo apt-get install -y make

      - name: run apisix packaging
        run: |
          make package type=deb app=apisix version=${PACKAGE_APISIX_VERSION} checkout=master \
            image_base=ubuntu image_tag=20.04

      - name: install apisix deb into container
        run: |
          docker build -t apache/apisix:${PACKAGE_APISIX_VERSION}-deb-test --build-arg APISIX_VERSION=${PACKAGE_APISIX_VERSION} -f test/apisix/Dockerfile.test.apisix.deb.ubuntu20.04 .
          echo "built apache/apisix:${PACKAGE_APISIX_VERSION}-deb-test"
          docker save -o output/apisix-${PACKAGE_APISIX_VERSION}-deb-test.tar apache/apisix:${PACKAGE_APISIX_VERSION}-deb-test
          echo "saved output/apisix-${PACKAGE_APISIX_VERSION}-deb-test.tar"
      - name: start apisix and test
        run: |
          docker run -d --rm --name apisix-${PACKAGE_APISIX_VERSION}-deb-test \
            -v $(pwd)/test/apisix/config.yaml:/usr/local/apisix/conf/config.yaml \
            -v $(pwd)/utils/performance_test.sh:/usr/local/apisix/utils/performance_test.sh \
            -p 9180:9180 -p 9080:9080 -p 9443:9443 apache/apisix:${PACKAGE_APISIX_VERSION}-deb-test

          docker exec apisix-${PACKAGE_APISIX_VERSION}-deb-test \
            bash -c "pwd && ls -l"

          docker exec apisix-${PACKAGE_APISIX_VERSION}-deb-test \
            bash -c "/usr/local/apisix/utils/performance_test.sh install_wrk2"

          docker exec apisix-${PACKAGE_APISIX_VERSION}-deb-test \
            bash -c "/usr/local/apisix/utils/performance_test.sh install_stap_tools"

          sleep 20
          curl http://127.0.0.1:9180/apisix/admin/routes/1 \
           -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -X PUT -d '
            {
              "uri": "/get",
              "upstream": {
                  "type": "roundrobin",
                  "nodes": {
                      "httpbin.org:80": 1
                  }
              }
            }'
          result_code=`curl -I -m 10 -o /dev/null -s -w %{http_code} http://127.0.0.1:9080/get`
          if [[ $result_code -ne 200 ]]; then
              printf "result_code: %s\n" "$result_code"
              exit 125
          fi

      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: apisix-${{ env.PACKAGE_APISIX_VERSION }}-deb-test.tar
          path: output/apisix-${{ env.PACKAGE_APISIX_VERSION }}-deb-test.tar
          retention-days: 5
          if-no-files-found: error
